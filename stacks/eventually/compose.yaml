name: eventually

services:
  db:
    restart: unless-stopped
    image: ghcr.io/kore-signet/eventually:db
    environment:
      # These are hardcoded in the upnuts-query image (/app/upnuts-r2dbc.json).
      # We could swap that file out, or we could just do this...
      POSTGRES_DB: eventually
      POSTGRES_USER: upnuts
      POSTGRES_PASSWORD: a
    networks:
      default: {}
      # This network is for the upnuts stack to use.
      eventually:
        aliases:
          - eventually_db
    volumes:
      - /srv/docker/eventually/db:/var/lib/postgresql/data
    mem_limit: 16g
    memswap_limit: 18g

  api:
    restart: unless-stopped
    image: ghcr.io/kore-signet/eventually:server
    depends_on:
      - db
    user: root
    environment:
      ROCKET_DATABASES: '{eventually={url=postgres://upnuts:a@db/eventually}}'
      ROCKET_CACHE_PATH: /data
      ROCKET_CACHE_TEMPORARY: true
      PG_HOST: db
      PG_USER: upnuts
      PG_DBNAME: eventually
      PG_PASSWORD: a
      RUST_LOG: info
      ROCKET_LOG_LEVEL: normal
      ROCKET_ADDRESS: 0.0.0.0
      ROCKET_PORT: 4445
    networks:
      - default
      - proxy
    volumes:
      - /srv/docker/eventually/sachet_cache:/data
    labels:
      traefik.enable: true
      traefik.http.middlewares.eventually-prefix.stripPrefixRegex.regex: \/eventually\/(v2\/)?
      traefik.http.routers.eventually.entrypoints: https
      traefik.http.routers.eventually.middlewares: eventually-prefix@docker
      traefik.http.routers.eventually.rule: >
        (Host(`api.sibr-03-hetzner.sibr.dev`) || Host(`api.sibr.dev`)) &&
        (PathPrefix(`/eventually/`) || PathPrefix(`/sachet/`))
      traefik.http.services.eventually.loadbalancer.server.port: 4445
    mem_limit: 512m

networks:
  eventually:
    name: eventually
  proxy:
    external: true
    name: proxy
